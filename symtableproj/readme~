Assignment 3 readme File

------------------------------------------------------------------------
What is your name?

Catherine Yu

------------------------------------------------------------------------
What authorized sources of information did you use to complete
the assignment? COPY THE LIST of authorized sources of information
given in the "Policies" web page to this section of the readme file,
and edit it as appropriate.

The course's lectures.

The course's precepts.

The course's website.

Documents that are referenced directly by the course's website.

The course's textbooks.

The man pages on the armlab cluster.

The course's current staff members outside of class time through Piazza.

------------------------------------------------------------------------
What unauthorized sources of information did you use to complete the
assignment? List any unauthorized sources of information that you used
to complete the assignment, and describe how you used them. The course
"Policies" web page defines unauthorized sources of information, and
any source that you have used but not listed in the authorized sources
should be included here. Please note that using an unauthorized source
may trigger a course penalty, and depending on the nature of the
interaction, may additionally require the interaction being reported
to the Committee on Discipline. Write "None" if you used no
unauthorized sources of information.

None

------------------------------------------------------------------------
What is your assessment of the assignment? Was it helpful? Was it fun?

This was fun! I think I liked this one the most out of the assignments
so far. It was definitely also really helpful for getting better at
programming in C and for becoming more familiar with tools like gdb.

------------------------------------------------------------------------
(optional) What information can you provide about your submission that
will help your grader to grade it in the most favorable light? In
particular, what bugs are in your submission?

No known bugs.

------------------------------------------------------------------------
What warnings does splint generate on symtablelist.c, and what are your
disagreements with them? Copy the splint warnings here, and express your
disagreement after each warning. If there are no warnings, then write
"None."

None

------------------------------------------------------------------------
What warnings does critTer generate on symtablelist.c, and what are your
disagreements with them? Copy the critTer warnings here, and express
your disagreement after each warning. If there are no warnings, then
write "None."

symtablelist.c: line 92: medium priority:
   Do you want to validate 'pvValue' through an assert?

symtablelist.c: line 124: medium priority:
   Do you want to validate 'pvValue' through an assert?

symtablelist.c: line 245: medium priority:
   Do you want to validate 'pvExtra' through an assert?

For all warnings above: we do not validate pvValue or pvExtra using
asserts because they are allowed to be NULL values and the function
would not fail if pvValue or pvExtra were NULL.

------------------------------------------------------------------------
What warnings does splint generate on symtablehash.c, and what are your
disagreements with them? Copy the splint warnings here, and express your
disagreement after each warning. If there are no warnings, then write
"None."

None

------------------------------------------------------------------------
What warnings does critTer generate on symtablehash.c, and what are your
disagreements with them? Copy the critTer warnings here, and express
your disagreement after each warning. If there are no warnings, then
write "None."

symtablehash.c: line 178: medium priority:
   Do you want to validate 'pvValue' through an assert?

symtablehash.c: line 219: medium priority:
   Do you want to validate 'pvValue' through an assert?

symtablehash.c: line 354: medium priority:
   Do you want to validate 'pvExtra' through an assert?

For all warnings above: we do not validate pvValue or pvExtra using
asserts because they are allowed to be NULL values and the function
would not fail if pvValue or pvExtra were NULL.

------------------------------------------------------------------------
What are the CPU times reported by testsymtable.c with binding counts
50, 500, 5000, 50000, and 500000 using (1) your linked list
implementation, (2) your non-expanding hash table implementation, and
(3) your expanding hash table implementation? Fill in the blanks.

The linked list implementation with:
-- 50 bindings consumed 0.000000 seconds.
-- 500 bindings consumed 0.010000 seconds.
-- 5000 bindings consumed 1.020000 seconds.
-- 50000 bindings consumed 99.580000 seconds.
-- 500000 bindings consumed too many seconds.

The non-expanding hash table implementation with:
-- 50 bindings consumed 0.000000 seconds.
-- 500 bindings consumed 0.000000 seconds.
-- 5000 bindings consumed 0.010000 seconds.
-- 50000 bindings consumed 0.390000 seconds.
-- 500000 bindings consumed 67.790000 seconds.

The expanding hash table implementation with:
-- 50 bindings consumed 0.000000 seconds.
-- 500 bindings consumed 0.000000 seconds.
-- 5000 bindings consumed 0.000000 seconds.
-- 50000 bindings consumed 0.170000 seconds.
-- 500000 bindings consumed 2.040000 seconds.
