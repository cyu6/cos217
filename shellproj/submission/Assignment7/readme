Assignment 7 readme File

------------------------------------------------------------------------
What is your name?

Catherine Yu

------------------------------------------------------------------------
What authorized sources of information did you use to complete
the assignment? COPY THE LIST of authorized sources of information
given in the "Policies" web page to this section of the readme file,
and edit it as appropriate.

The course's lectures.

The course's precepts.

The course's website.

Documents that are referenced directly by the course's website.

The course's textbooks.

The man pages on the armlab cluster.

The course's current staff members outside of class time through Piazza.

------------------------------------------------------------------------
What unauthorized sources of information did you use to complete the
assignment? List any unauthorized sources of information that you used
to complete the assignment, and describe how you used them. The course
"Policies" web page defines unauthorized sources of information, and
any source that you have used but not listed in the authorized sources
should be included here. Please note that using an unauthorized source
may trigger a course penalty, and depending on the nature of the
interaction, may additionally require the interaction being reported
to the Committee on Discipline. Write "None" if you used no
unauthorized sources of information.

None

------------------------------------------------------------------------
What is your assessment of the assignment? Was it helpful? Was it fun?

It was a pretty confusing at first but as I worked through it and
consulted the precept code and lecture slides, it became better. I
guess it was pretty helpful for reviewing everything we've done this
semester.

------------------------------------------------------------------------
(optional) What information can you provide about your submission that
will help your grader to grade it in the most favorable light? In
particular, what bugs are in your submission?

I tried implementing Stage 6, I think it partly works but I wasn't quite
sure how to test it completely so I think it is most likely not
completely working.

------------------------------------------------------------------------
What warnings does splint generate on your code, and what are your
disagreements with them? Copy the splint warnings here, and express your
disagreement after each warning. If there are no warnings, then write
"None."

None

------------------------------------------------------------------------
What warnings does critTer generate on your code, and what are your
disagreements with them? Copy the critTer warnings here, and express
your disagreement after each warning. If there are no warnings, then
write "None."

   lexanalysis.c: line 80: low priority:
   A loop should consist of fewer than 35 lines;
   this loop consists of 84 lines; consider refactoring

   lexanalysis.c: line 96: low priority:
   This area is deeply nested at level 4, consider refactoring

   lexanalysis.c: line 135: low priority:
   This area is deeply nested at level 4, consider refactoring

I implemented my DFA directly in the while loop used to move through
the line, which is why it is so long and why there are two parts that
are deeply nested in the loop.

   command.c: line 37: medium priority:
   Do you want to validate 'pcStdin' through an assert?

   command.c: line 37: medium priority:
   Do you want to validate 'pcStdout' through an assert?

We do not validate pcStdin and pcStdout using asserts because they can
be NULL values.

   synanalysis.c: line 168: low priority:
   A loop should consist of fewer than 35 lines;
   this loop consists of 44 lines; consider refactoring

   synanalysis.c: line 194: low priority:
   This area is deeply nested at level 4, consider refactoring

   synanalysis.c: line 205: low priority:
   This area is deeply nested at level 4, consider refactoring

Similar to lexanalysis.c, the longer loop works better for my design
and thus there are two parts that are deeply nested in the loop due to
error checks.

   ___ish.c: line 159: low priority:
   This area is deeply nested at level 4, consider refactoring

   ___ish.c: line 162: low priority:
   This area is deeply nested at level 4, consider refactoring

Again, I have two parts that are deeply nested in the loop due to error
checks.

   ___execution.c: line 156: low priority:
   A function should consist of fewer than 140 lines;
   this function consists of 147 lines; consider refactoring

   ___execution.c: line 255: low priority:
   This area is deeply nested at level 4, consider refactoring

The longer loop works better for my design and there is one part that is
deeply nested in the loop due to error checks.

------------------------------------------------------------------------
